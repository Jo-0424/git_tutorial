○git 何のために使うの
ファイルのヴァージョンを管理するため

git status

git add ファイル名
git commit ファイル名
1行目にコメント

git diff

git diff --staged

git log --oneline
	-p ファイル名
	-n コミット数（最近の変更を表示）

git rm ファイル名
git rm -r ディレクトリ名
git rm --cached ファイル名（リポジトリのみ削除）

git reset HEAD index.html
git checkout index.html

git mv 旧ファイル　新ファイル

git remote add origin

git push リモート名　ブランチ名

git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global alias.co checkout

git checkout --　ファイル名　（ワークツリー）

git reset HEAD ファイル名　（ステージ）

git comit --amend(pushしたらかえちゃだめ)

git remote -v

git fetch リモート名
git branch -a
git merge リモート名/ブランチ名 

git pull リモート名　ブランチ名（fetch mergeを一度に行う）


fetch pullの使い分け
pullは今いるブランチが上書きされる
masterブランチにいるのにhogeブランチが統合される

git remote rename 旧リモート名　新リモート名

git remote rm　リモート名

ブランチはコミットを記録したポインタ
HEADは現在作業中のブランチを記録したポインタ

git branch ブランチ名

git checkout 既存ブランチ名

git checkout -b 新ブランチ名ca

git merge ブランチ名
git 





